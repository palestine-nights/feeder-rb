#!/usr/bin/env ruby

require 'optparse'
require 'ostruct'

require_relative '../lib/feeder.rb'

class OptParser
  MANDATORY = [:username, :password]

  def self.parse(args)
    options = OpenStruct.new

    opts = OptionParser.new do |opts|
      opts.banner = "Usage: ./feeder [options]"

      opts.on("-u", "--username USERNAME", "Administrator username") do |username|
        options.username = username
      end

      opts.on("-p", "--password PASSWORD", "Administrator password") do |password|
        options.password = password
      end
    end

    begin
      opts.parse!(args)

      missing = MANDATORY.select {|p| options[p].nil?}

      unless missing.empty?
        raise OptionParser::MissingArgument.new(missing.join(', '))
      end
    rescue OptionParser::InvalidOption, OptionParser::MissingArgument
      puts $!.to_s
      puts opts
      exit
    end

    options
  end
end

options = OptParser.parse(ARGV)

feeder = Feeder.new(options.username, options.password)

feeder.start
